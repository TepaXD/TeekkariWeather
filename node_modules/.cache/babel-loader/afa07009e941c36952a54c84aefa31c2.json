{"ast":null,"code":"import _regeneratorRuntime from \"/Users/TeemuK/react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/TeemuK/react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/TeemuK/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TeemuK/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TeemuK/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TeemuK/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TeemuK/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TeemuK/react-app/src/components/lut.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron, Grid, Row, Col, Image, Button } from \"react-bootstrap\";\nimport \"./LUT.css\"; //import  Weather  from \"Weather\";\n\nvar API_KEY = \"097b1d41353753ec41aa4a754b4a2b32\";\n\nvar LUT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LUT, _Component);\n\n  function LUT() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LUT);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LUT)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = \"lappeenranta\";\n                country = \"finland\";\n                _context.next = 5;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=helsinki,fi&APPID=${API_KEY}\");\n\n              case 5:\n                api_call = _context.sent;\n                _context.next = 8;\n                return api_call.json();\n\n              case 8:\n                data = _context.sent;\n\n                if (city && country) {\n                  _this.setState({\n                    temperature: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    humidity: data.main.humidity,\n                    description: data.weather[0].description,\n                    error: \"\"\n                  });\n                } else {\n                  _this.setState({\n                    temperature: undefined,\n                    city: undefined,\n                    country: undefined,\n                    humidity: undefined,\n                    description: undefined,\n                    error: \"Please enter the value.\"\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(LUT, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"body\", {\n        className: \"LUT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"LAPPEENRANTAAAA\"), React.createElement(\"div\", {\n        className: \"Home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LUT;\n}(Component);\n\nexport default LUT;","map":{"version":3,"sources":["/Users/TeemuK/react-app/src/components/lut.js"],"names":["React","Component","Link","Jumbotron","Grid","Row","Col","Image","Button","API_KEY","LUT","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","fetch","api_call","json","data","setState","main","temp","name","sys","weather"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,KAApC,EAA2CC,MAA3C,QAAyD,iBAAzD;AACA,OAAO,WAAP,C,CACA;;AACA,IAAMC,OAAO,GAAG,kCAAhB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,KAAK,EAAEL;AAND,K;;UASRM,U;;;;;+BAAa,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACXA,gBAAAA,CAAC,CAACC,cAAF;AACMP,gBAAAA,IAFK,GAEE,cAFF;AAGLC,gBAAAA,OAHK,GAGK,SAHL;AAAA;AAAA,uBAIYO,KAAK,CAC1B,+EAD0B,CAJjB;;AAAA;AAILC,gBAAAA,QAJK;AAAA;AAAA,uBAOQA,QAAQ,CAACC,IAAT,EAPR;;AAAA;AAOLC,gBAAAA,IAPK;;AASX,oBAAIX,IAAI,IAAIC,OAAZ,EAAqB;AACnB,wBAAKW,QAAL,CAAc;AACZd,oBAAAA,WAAW,EAAEa,IAAI,CAACE,IAAL,CAAUC,IADX;AAEZd,oBAAAA,IAAI,EAAEW,IAAI,CAACI,IAFC;AAGZd,oBAAAA,OAAO,EAAEU,IAAI,CAACK,GAAL,CAASf,OAHN;AAIZC,oBAAAA,QAAQ,EAAES,IAAI,CAACE,IAAL,CAAUX,QAJR;AAKZC,oBAAAA,WAAW,EAAEQ,IAAI,CAACM,OAAL,CAAa,CAAb,EAAgBd,WALjB;AAMZC,oBAAAA,KAAK,EAAE;AANK,mBAAd;AAQD,iBATD,MASO;AACL,wBAAKQ,QAAL,CAAc;AACZd,oBAAAA,WAAW,EAAEC,SADD;AAEZC,oBAAAA,IAAI,EAAED,SAFM;AAGZE,oBAAAA,OAAO,EAAEF,SAHG;AAIZG,oBAAAA,QAAQ,EAAEH,SAJE;AAKZI,oBAAAA,WAAW,EAAEJ,SALD;AAMZK,oBAAAA,KAAK,EAAE;AANK,mBAAd;AAQD;;AA3BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BA8BJ;AACP,aACE;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EA/CejB,S;;AAkDlB,eAAeS,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron, Grid, Row, Col, Image, Button } from \"react-bootstrap\";\nimport \"./LUT.css\";\n//import  Weather  from \"Weather\";\nconst API_KEY = \"097b1d41353753ec41aa4a754b4a2b32\";\n\nclass LUT extends Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  };\n\n  getWeather = async e => {\n    e.preventDefault();\n    const city = \"lappeenranta\";\n    const country = \"finland\";\n    const api_call = await fetch(\n      \"http://api.openweathermap.org/data/2.5/weather?q=helsinki,fi&APPID=${API_KEY}\"\n    );\n    const data = await api_call.json();\n\n    if (city && country) {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"Please enter the value.\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <body className=\"LUT\">\n        <h1>LAPPEENRANTAAAA</h1>\n        <div className=\"Home\" />\n      </body>\n    );\n  }\n}\n\nexport default LUT;\n"]},"metadata":{},"sourceType":"module"}