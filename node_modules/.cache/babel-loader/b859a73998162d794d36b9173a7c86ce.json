{"ast":null,"code":"import _regeneratorRuntime from \"/Users/TeemuK/TeekkariWeather/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/TeemuK/TeekkariWeather/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/TeemuK/TeekkariWeather/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TeemuK/TeekkariWeather/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TeemuK/TeekkariWeather/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TeemuK/TeekkariWeather/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TeemuK/TeekkariWeather/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TeemuK/TeekkariWeather/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/CustomNavbar\";\nimport LUT from \"./components/lut\";\nimport Turku from \"./components/Turku\";\nimport Espoo from \"./components/Espoo\";\nimport Oulu from \"./components/Oulu\";\nimport Tampere from \"./components/Tampere\";\nimport Vaasa from \"./components/Vaasa\";\nvar API_KEY = \"097b1d41353753ec41aa4a754b4a2b32\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = \"lappeenranta\";\n                country = \"fi\";\n                _context.next = 5;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&APPID=\").concat(API_KEY));\n\n              case 5:\n                api_call = _context.sent;\n                _context.next = 8;\n                return api_call.json();\n\n              case 8:\n                data = _context.sent;\n\n                if (city && country) {\n                  _this.setState({\n                    temperature: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    humidity: data.main.humidity,\n                    description: data.weather[0].description,\n                    error: \"\"\n                  });\n                } else {\n                  _this.setState({\n                    temperature: undefined,\n                    city: undefined,\n                    country: undefined,\n                    humidity: undefined,\n                    description: undefined,\n                    error: \"Please enter the value.\"\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Turku\",\n        component: Turku,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/lut\",\n        component: LUT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Espoo\",\n        component: Espoo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Oulu\",\n        component: Oulu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Vaasa\",\n        component: Vaasa,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Tampere\",\n        component: Tampere,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/TeemuK/TeekkariWeather/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","Navbar","LUT","Turku","Espoo","Oulu","Tampere","Vaasa","API_KEY","App","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","fetch","api_call","json","data","setState","main","temp","name","sys","weather"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/CustomNavbar\";\nimport LUT from \"./components/lut\";\nimport Turku from \"./components/Turku\";\nimport Espoo from \"./components/Espoo\";\nimport Oulu from \"./components/Oulu\";\nimport Tampere from \"./components/Tampere\";\nimport Vaasa from \"./components/Vaasa\";\nconst API_KEY = \"097b1d41353753ec41aa4a754b4a2b32\";\n\nclass App extends Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  };\n  getWeather = async e => {\n    e.preventDefault();\n    const city = \"lappeenranta\";\n    const country = \"fi\";\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}`\n    );\n    const data = await api_call.json();\n    if (city && country) {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\"\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: \"Please enter the value.\"\n      });\n    }\n  };\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/Turku\" component={Turku} />\n          <Route path=\"/lut\" component={LUT} />\n          <Route path=\"/Espoo\" component={Espoo} />\n          <Route path=\"/Oulu\" component={Oulu} />\n          <Route path=\"/Vaasa\" component={Vaasa} />\n          <Route path=\"/Tampere\" component={Tampere} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}